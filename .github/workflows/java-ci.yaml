name: Java CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Validate POM file
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils
          xmllint --noout pom.xml

      - name: Add PostgreSQL dependency
        run: |
          if ! grep -q '<artifactId>postgresql</artifactId>' pom.xml; then
            sed -i '/<\/dependencies>/ i\
              <dependency>\n\
                <groupId>org.postgresql</groupId>\n\
                <artifactId>postgresql</artifactId>\n\
                <scope>test</scope>\n\
              </dependency>' pom.xml
          fi
        shell: bash

      - name: Install dependencies
        run: mvn install -DskipTests

      - name: Build with Maven
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_DRIVER_CLASS_NAME: ${{ secrets.DATABASE_DRIVER_CLASS_NAME }}
        run: mvn clean install

      - name: Run tests
        run: mvn test

      - name: Verify application runs (optional step)
        run: mvn spring-boot:run -Dspring-boot.run.arguments=--server.port=8080 &
        shell: bash
